# Montando o dataframe pro plot
data_t <- cbind(t,t_pop) %>%
as.data.frame() %>%
rename(simulation = t,
population = t_pop) %>%
pivot_longer(cols=c('simulation', 'population'),
names_to='group',
values_to='values')
ggplot(data_t, aes(x = values, fill = group)) +       geom_histogram(position = "identity", alpha = 0.2, bins = 50) +
theme_light() +
ggtitle("t distibution")
n = k+1
Z_list_new <- vector("list",n) %>%
map(~rnorm(500))
S2 <- Z_list_new %>%
map(~(1/(size-1))*sum((.x - mean(.x))^2))
size <- 500
Z_list_new <- vector("list",n) %>%
map(~rnorm(size))
set.seed(8)
Z_list_new <- vector("list",n) %>%
map(~rnorm(size))
S2 <- Z_list_new %>%
map(~(1/(size-1))*sum((.x - mean(.x))^2))
View(S2)
media <- Z_list_new %>%
map(~mean(.x))
test <- (media - 0)/sqrt(S2/n)
# Calculando S2 de cada normal
S2 <- Z_list_new %>%
map_dbl(~(1/(size-1))*sum((.x - mean(.x))^2))
media <- Z_list_new %>%
map_dbl(~mean(.x))
test <- (media - 0)/sqrt(S2/n)
df <- cbind(t,test) %>%
as.data.frame()  %>%
pivot_longer(cols=c('t', 'test'),
names_to='group',
values_to='values')
t
test
length(t)
length(test)
test <- c(test, rep(NA,399))
df <- cbind(t,test) %>%
as.data.frame()  %>%
pivot_longer(cols=c('t', 'test'),
names_to='group',
values_to='values')
ggplot(df, aes(x = values, fill = group)) +
geom_histogram(position = "identity", alpha = 0.2, bins = 50) +
theme_light()
test <- (media - 0)/sqrt(S2/n)
t <- t[1:size]
df <- cbind(t,test) %>%
as.data.frame()  %>%
pivot_longer(cols=c('t', 'test'),
names_to='group',
values_to='values')
size
set.seed(13)
k = 100
# 1) Lista de N(0,1)
Z_list <- vector("list",k) %>%
map(~rnorm(500))
# 2) Qui = Soma de Z^2
Z2 <- Z_list %>%
map(~ .x^2)
qui_k <- Reduce("+", Z2)
# 3) tk
Z <- rnorm(500)
denominador <- qui_k/k
t <- Z/sqrt(denominador)
t_pop <- rt(500,k)
# Montando o dataframe pro plot
data_t <- cbind(t,t_pop) %>%
as.data.frame() %>%
rename(simulation = t,
population = t_pop) %>%
pivot_longer(cols=c('simulation', 'population'),
names_to='group',
values_to='values')
ggplot(data_t, aes(x = values, fill = group)) +       geom_histogram(position = "identity", alpha = 0.2, bins = 50) +
theme_light() +
ggtitle("t distibution")
n <- k+1
size <- 500
set.seed(8)
# Gerando normais N(0,1)
Z_list_new <- vector("list",n) %>%
map(~rnorm(size))
# Calculando S2 de cada normal
S2 <- Z_list_new %>%
map_dbl(~(1/(size-1))*sum((.x - mean(.x))^2))
# Calculando media aritmetica de cada normal
media <- Z_list_new %>%
map_dbl(~mean(.x))
# Calculando estatistica de teste
test <- (media - 0)/sqrt(S2/n)
t <- t[1:n]
df <- cbind(t,test) %>%
as.data.frame()  %>%
pivot_longer(cols=c('t', 'test'),
names_to='group',
values_to='values')
ggplot(df, aes(x = values, fill = group)) +
geom_histogram(position = "identity", alpha = 0.2, bins = 50) +
theme_light()
n <- k+1
size <- 500
set.seed(8)
# Gerando normais N(0,1)
Z_list_new <- vector("list",n) %>%
map(~rnorm(size))
n <- 500
size <- k+1
set.seed(8)
# Gerando normais N(0,1)
Z_list_new <- vector("list",n) %>%
map(~rnorm(size))
# Calculando S2 de cada normal
S2 <- Z_list_new %>%
map_dbl(~(1/(size-1))*sum((.x - mean(.x))^2))
# Calculando media aritmetica de cada normal
media <- Z_list_new %>%
map_dbl(~mean(.x))
# Calculando estatistica de teste
test <- (media - 0)/sqrt(S2/n)
df <- cbind(t,test) %>%
as.data.frame()  %>%
pivot_longer(cols=c('t', 'test'),
names_to='group',
values_to='values')
ggplot(df, aes(x = values, fill = group)) +
geom_histogram(position = "identity", alpha = 0.2, bins = 50) +
theme_light()
set.seed(13)
k = 100
# 1) Lista de N(0,1)
Z_list <- vector("list",k) %>%
map(~rnorm(500))
# 2) Qui = Soma de Z^2
Z2 <- Z_list %>%
map(~ .x^2)
qui_k <- Reduce("+", Z2)
# 3) tk
Z <- rnorm(500)
denominador <- qui_k/k
t <- Z/sqrt(denominador)
t_pop <- rt(500,k)
# Montando o dataframe pro plot
data_t <- cbind(t,t_pop) %>%
as.data.frame() %>%
rename(simulation = t,
population = t_pop) %>%
pivot_longer(cols=c('simulation', 'population'),
names_to='group',
values_to='values')
ggplot(data_t, aes(x = values, fill = group)) +       geom_histogram(position = "identity", alpha = 0.2, bins = 50) +
theme_light() +
ggtitle("t distibution")
t
n <- 500
size <- k+1
set.seed(8)
# Gerando normais N(0,1)
Z_list_new <- vector("list",n) %>%
map(~rnorm(size))
# Calculando S2 de cada normal
S2 <- Z_list_new %>%
map_dbl(~(1/(size-1))*sum((.x - mean(.x))^2))
media <- Z_list_new %>%
map_dbl(~mean(.x))
test <- (media - 0)/sqrt(S2/n)
df <- cbind(t,test) %>%
as.data.frame()  %>%
pivot_longer(cols=c('t', 'test'),
names_to='group',
values_to='values')
ggplot(df, aes(x = values, fill = group)) +
geom_histogram(position = "identity", alpha = 0.2, bins = 50) +
theme_light()
set.seed(13)
size = 101
k = 100
# 1) Lista de N(0,1)
Z_list <- vector("list",k) %>%
map(~rnorm(size))
# 2) Qui = Soma de Z^2
Z2 <- Z_list %>%
map(~ .x^2)
qui_k <- Reduce("+", Z2)
# 3) tk
Z <- rnorm(size)
denominador <- qui_k/k
t <- Z/sqrt(denominador)
t_pop <- rt(size,k)
# Montando o dataframe pro plot
data_t <- cbind(t,t_pop) %>%
as.data.frame() %>%
rename(simulation = t,
population = t_pop) %>%
pivot_longer(cols=c('simulation', 'population'),
names_to='group',
values_to='values')
ggplot(data_t, aes(x = values, fill = group)) +       geom_histogram(position = "identity", alpha = 0.2, bins = 50) +
theme_light() +
ggtitle("t distibution")
size <- 500
n <- k+1
set.seed(8)
# Gerando normais N(0,1)
Z_list_new <- vector("list",n) %>%
map(~rnorm(size))
# Calculando S2 de cada normal
S2 <- Z_list_new %>%
map_dbl(~(1/(size-1))*sum((.x - mean(.x))^2))
# Calculando media aritmetica de cada normal
media <- Z_list_new %>%
map_dbl(~mean(.x))
# Calculando estatistica de teste
test <- (media - 0)/sqrt(S2/n)
df <- cbind(t,test) %>%
as.data.frame()  %>%
pivot_longer(cols=c('t', 'test'),
names_to='group',
values_to='values')
ggplot(df, aes(x = values, fill = group)) +
geom_histogram(position = "identity", alpha = 0.2, bins = 50) +
theme_light()
size <- 500
n <- k+1
set.seed(8)
# Gerando normais N(0,1)
Z_list_new <- vector("list",n) %>%
map(~rnorm(size))
# Calculando S2 de cada normal
S2 <- Z_list_new %>%
map_dbl(~(1/(size-1))*sum((.x - mean(.x))^2))
# Calculando media aritmetica de cada normal
media <- Z_list_new %>%
map_dbl(~mean(.x))
# Calculando estatistica de teste
test <- (media - 0)/sqrt(S2/size)
df <- cbind(t,test) %>%
as.data.frame()  %>%
pivot_longer(cols=c('t', 'test'),
names_to='group',
values_to='values')
ggplot(df, aes(x = values, fill = group)) +
geom_histogram(position = "identity", alpha = 0.2, bins = 50) +
theme_light()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(moments)
library(stargazer)
library(hrbrthemes)
k = 100 # numero de amostras
n = 200 # numero de observacoes
p = 0.4 # parametro populacional
geom_list <- vector("list",k) %>%
map(~rgeom(n, p))
xbarra <- vector("list",k)
k = 100 # numero de amostras
n = 200 # numero de observacoes
p = 0.4 # parametro populacional
# Criando as amostras
geom_list <- vector("list",k) %>%
map(~rgeom(n, p))
xbarra <- vector("list",k)
for (i in 1:k) {
for (j in 1:n) {
xbarra[[i]][j] <- sum(geom_list[[i]][1:j])/j
}
}
View(xbarra)
View(xbarra)
l1 <- c()
l1 <- rep(0,k)
for (i in 1:k) {
l1[i] <- xbarra[[i]][1]
}
rm(xbarra)
xbarra <- vector("list",k)
for (i in 1:k) {
for (j in 1:n) {
xbarra[[i]][j] <- sum(geom_list[[i]][1:j])/j
}
}
xbarra[[1]][1]
xbarra[[2]][1]
l7 <- rep(0,k)
for (i in 1:k) {
l1[i] <- xbarra[[i]][7]
}
l7 <- rep(0,k)
for (i in 1:k) {
l7[i] <- xbarra[[i]][7]
}
l7
sum(l7)
oi <- xbarra %>%
map(~1/.x)
oi[[1][1]]
oi[[1]][1]
oi[[7]][1]
xbarra[[7]][1]
inv_xbarra <- xbarra %>%
map(~1/.x)
Reduce("+", inv_xbarra)
inv_xbarra <- xbarra %>%
map(~1/.x) %>%
Reduce("+")
inv_xbarra <- xbarra %>%
map(~1/.x) %>%
Reduce("+",.)
inv_xbarra
inv_xbarra <- inv_xbarra/100 - p
inv_xbarra
# Como estimador é inverso das medias rolantes:
inv_xbarra <- xbarra %>%
map(~1/.x) %>%
Reduce("+",.)
# Formula do vies empirico
vies_emp <- inv_xbarra/100 - p
df <- cbind(1:n,vies_emp)
df <- cbind(1:n,vies_emp) %>% as.data.frame()
colnames(df)
ggplot(df) +
geom_line(aes(x = V1, y = vies_emp))
ggplot(df) +
geom_line(aes(x = V1, y = vies_emp)) +
theme_light()
ggplot(df) +
geom_line(aes(x = V1, y = vies_emp)) +
theme_light() +
xlab("observacoes") +
ylab("") +
ggtitle("Viés Empírico")
# Como estimador é inverso das medias rolantes:
theta <- xbarra %>%
map(~1/.x)
sum_theta <- theta%>%
Reduce("+",.)
# Formula do vies empirico
vies_emp <- sum_theta/100 - p
# Plotando o vies empirico
df <- cbind(1:n,vies_emp) %>% as.data.frame()
ggplot(df) +
geom_line(aes(x = V1, y = vies_emp)) +
theme_light() +
xlab("observacoes") +
ylab("") +
ggtitle("Viés Empírico")
square_error <- theta %>%
map((~.x - p)^2)
square_error <- theta %>%
map((~. - p)^2)
theta
square_error <- theta %>%
map(~.x - p)
square_error <- theta %>%
map(~.x - p) %>%
map(~.x^2)
square_error <- theta %>%
map(~.x - p) %>%
map(~.x^2)
sum_square_error <- square_error %>%
Reduce("+",.)
mse_emp <- sum_square_error/100
mse_emp
df <- cbind(1:n,mse_emp) %>% as.data.frame()
ggplot(df) +
geom_line(aes(x = V1, y = vies_emp)) +
theme_light() +
xlab("observacoes") +
ylab("") +
ggtitle("MSE Empírico")
df <- cbind(1:n,mse_emp) %>% as.data.frame()
ggplot(df) +
geom_line(aes(x = V1, y = vies_emp)) +
theme_light() +
xlab("observacoes") +
ylab("") +
ggtitle("MSE Empírico")
oi <- cbind(mse_emp,vies_emp) %>% as.data.frame()
View(oi)
ggplot(df) +
geom_line(aes(x = V1, y = mse_emp)) +
theme_light() +
xlab("observacoes") +
ylab("") +
ggtitle("MSE Empírico")
k = 100 # numero de amostras
n = 200 # numero de observacoes
p = 0.4 # parametro populacional
set.seed(101)
# Criando as amostras
geom_list <- vector("list",k) %>%
map(~rgeom(n, p))
# Medias rolantes
xbarra <- vector("list",k)
for (i in 1:k) {
for (j in 1:n) {
xbarra[[i]][j] <- sum(geom_list[[i]][1:j])/j
}
}
# Como estimador é inverso das medias rolantes:
theta <- xbarra %>%
map(~1/.x)
sum_theta <- theta %>%
Reduce("+",.)
# Formula do vies empirico
vies_emp <- sum_theta/100 - p
# Plotando o vies empirico
df <- cbind(1:n,vies_emp) %>% as.data.frame()
ggplot(df) +
geom_line(aes(x = V1, y = vies_emp)) +
theme_light() +
xlab("observacoes") +
ylab("") +
ggtitle("Viés Empírico")
square_error <- theta %>%
map(~.x - p) %>%
map(~.x^2)
sum_square_error <- square_error %>%
Reduce("+",.)
# MSE empirico
mse_emp <- sum_square_error/100
# Plotando o MSE empirico
# Plotando o vies empirico
df <- cbind(1:n,mse_emp) %>% as.data.frame()
ggplot(df) +
geom_line(aes(x = V1, y = mse_emp)) +
theme_light() +
xlab("observacoes") +
ylab("") +
ggtitle("MSE Empírico")
df <- cbind(1:n, theta) %>%
as.data.frame()
df <- cbind(1:n, theta) %>%
as.data.frame()
ggplot(data = df) +
geom_point(aes(x = V1, y = theta), color = "#3ED18E") +
geom_hline(yintercept = p, linetype = "dashed", color = "red")+
theme_light()
theta
df <- cbind(1:n, sum_theta/100) %>%
as.data.frame()
View(df)
ggplot(data = df) +
geom_point(aes(x = V1, y = V2), color = "#3ED18E") +
geom_hline(yintercept = p, linetype = "dashed", color = "red")+
theme_light()
x <- (sum_theta/100)*sqrt(200)
x
load("~/MONOGRAFIA_TITO/data_new/new_workspace.RData")
library(tidyverse)
data[[1]] %>% view()
library(randomForest)
library(tidyverse)
library(HDeconometrics)
library(Metrics)
library(reshape2)
library(ggplot2)
library(ggsci)
library(gridExtra)
library(glmnet)
library(rbcb)
library(lubridate)
library(forecast)
acumulacao <- 1:12 %>% as.list()
data <- acumulacao %>%
map(~paste("~/MONOGRAFIA_TITO/data_new/df",.x,".rds",sep = "")%>%
readRDS())
# horizonte
k <- 12
# window (fixed) size: vou usar data[[1]], mas poderia ser qualquer outro
window <- data[[1]] %>% filter(ref.date <"2018-01-01") %>% nrow()
window <- window - k +1
data[[1]]$ref.date[1:window]
data[[1]]$ref.date[72]
data[[1]]$ref.date[length(data[[1]]$ref.date -72)]
data[[1]]$ref.date[length(data[[1]]$ref.date) - 72]
prediction[[1]]
# window (fixed) size: vou usar data[[1]], mas poderia ser qualquer outro
window <- data[[1]] %>% filter(ref.date <"2018-01-01") %>% nrow()
window
# window (fixed) size: vou usar data[[1]], mas poderia ser qualquer outro
window <- data[[1]] %>% filter(ref.date <"2018-01-01")
window
window$ref.date
# window (fixed) size: vou usar data[[1]], mas poderia ser qualquer outro
window <- data[[1]] %>% filter(ref.date <"2018-01-01") %>% nrow()
window <- window - k +1
# numero de previsoes (igual pra todos)
size <- nrow(data[[1]]) - window - 1
size <- size + 1
y <- data[[1]] %>% #(poderia usar qualquer um dos dfs de data)
select(ipca) %>%
as.matrix()
window+1
data[[1]]$ref.date[(window+1):nrow(data[[1]])]
# window (fixed) size: vou usar data[[1]], mas poderia ser qualquer outro
window <- data[[1]] %>% filter(ref.date <"2018-01-01") %>% nrow()
window <- window - k +1
# window (fixed) size: vou usar data[[1]], mas poderia ser qualquer outro
window <- data[[1]] %>% filter(ref.date <"2018-01-01") %>% nrow()
window <- window - k +1
data[[1]]$ref.date[window+1]
setwd("~/GitHub2/MONOGRAFIA_TITO")
